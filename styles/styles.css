:root {
   --max-width: 70rem;
   --background-color: #F6ED91;
   --menu-bar-color: #0C8AAB;
   --menu-color: #E6F5F8;
   --menu-text-color: #333;
   --menu-text-hover-color: #0C8AAB;
   --footer-color: #0C8AAB;

   --form-color: #74b9ff;
   /* form background color*/
   --form-text-color: #fff;
   /* form text color */
   --input-color: #666;
   /* input field text color */
   --fake-width: 20px;
   /* width of "fake" checkboxes and radio buttons */
}

* {
   box-sizing: border-box;
}

body {
   display: flex;
   flex-direction: column;
   font-family: 'Proza Libre', sans-serif;
   color: #333;
   line-height: 1.5;
}

h1,
h2,
h3,
h4 {
   font-family: 'Cormorant Garamond', serif;
}

footer {
   height: 200px;
   background-color: var(--footer-color);
}

img {
   display: block;
   width: 100%;
}

.menu-bar {
   background-color: var(--menu-bar-color);
   color: var(--menu-text-color);
   font-size: 1.5rem;
}

nav {
   display: flex;
   position: absolute;
   top: 0;
   left: 0;
   right: 0;

   background-color: var(--menu-color);

   transform: translatey(-600px);

   transition: transform 400ms ease-out;
   z-index: 100;
}

.open nav {
   transform: translatey(0);
}

.menu-bar ul {
   display: flex;
   flex-direction: column;
   flex: 100%;
   list-style-type: none;
   padding: 0;
   margin: 0;
}

.menu-bar li {
   border-bottom: 1px inset var(--menu-text-color);
}

.menu-bar li:first-child {
   padding-top: 2rem;
}

.menu-bar li:last-child {
   border: none;
   padding-bottom: 2rem;
}

.menu-bar a {
   text-decoration: none;
   color: inherit;
   padding: 1rem;
   display: block;
}

.menu-bar a:hover {
   color: var(--menu-text-hover-color);
}

.hamburger,
.close {
   padding: 1rem;
   cursor: pointer;
   height: 32px;
   width: 32px;
}

/* set up buttons - which are just clever divs */
.hamburger,
.close {
   width: 2.5rem;
   height: 2.5rem;
   padding: 0.5rem;
   margin: 0.75rem;
}

.hamburger {
   display: flex;
   flex-flow: column nowrap;
   justify-content: space-around;
   padding: 0.5rem;
}

.hamburger>div,
.close>div {
   background-color: #fff;
   width: 100%;
   height: 2px;
}

.close>div {
   height: 4px;
   background-color: var(--menu-bar-color);
}

/* rotate the divs to make an X */
.close div:nth-of-type(1) {
   transform: translatey(4px) rotate(45deg);
}

.close div:nth-of-type(2) {
   transform: rotate(-45deg);
}

.hamburger:hover>div,
.close:hover>div {
   background-color: var(--background-color);
}


.hero {
   display: grid;
   grid-template-columns: 1fr;
   grid-template-rows: auto;
   grid-template-areas: "overlay";
   position: relative;
   line-height: 1;
}

.hero .image-wrapper {
   grid-area: overlay;
}

.hero .text-wrapper {
   grid-area: overlay;
   align-self: center;
   justify-self: center;
   padding: 0 1rem;
   max-width: 30rem;
   color: #000;
}

.hero .text-wrapper::before {
   content: "";
   display: block;
   position: absolute;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
   background-color: rgba(196, 172, 69, 0.2);

}

.hero .text-wrapper h1 {
   font-size: 6rem;
   letter-spacing: 6px;
   text-shadow: 3px 3px 3px rgba(0, 0, 0, .6);
   margin: 0;
}

.hero .text-wrapper p {
   font-size: 2rem;
   font-weight: bold;
   margin: 0;
   padding-bottom: 1rem;
}

.article-background.yellow {
   background-color: var(--background-color);
}

.article-background.orange {
   background-color: #E6F5F8;
}

.panel {
   display: flex;
   flex-direction: column;
   margin: 0 auto;
   padding: 4rem 1rem;
   max-width: var(--max-width);
}

.panel .text-wrapper {
   flex: 50%;
   font-size: 1.25rem;
   padding: 0 1rem;
}

.panel .image-wrapper {
   flex: 50%;
}

.panel img {
   height: 100%;
   object-fit: cover;
}

.panel .top img {
   object-position: top;
}

.panel .left {
   margin-bottom: 1rem;
   order: -1;
}

.tagline {
   font-family: 'Cormorant Garamond', serif;
   font-size: 6rem;
   text-align: center;
   padding: 3rem 0;

}

.cards {
   display: grid;
   grid-template-columns: 1fr;
   grid-template-rows: repeat(4, auto);
   grid-gap: 1rem;
   max-width: var(--max-width);
   margin: auto;
}

.card {
   outline: red 1px;
   text-align: center;
}

.cards a {
   text-decoration: none;
   color: inherit;
}

/****** form ******/
.form main {
   display: flex;
   flex-direction: column;
   align-items: center;
   font-family: Roboto, sans-serif;
   font-weight: 400;
   background-color: var(--form-color);
   color: var(--form-text-color);
   padding: 1rem;
   font-size: 18px;
}

.form h1 {
   font-weight: 400;
   font-size: 2.2rem;
   letter-spacing: 2px;
}

.form p {
   /*  margin: 0; */
}

.form article {
   max-width: 38em;
}

form {
   display: grid;
   grid-template-columns: max-content 1fr;
   grid-auto-rows: max-content;
   grid-gap: 1rem 1rem;
}

label {
   justify-self: end;
   align-self: center;
}

/* add position: relative to align the "fake" boxes */
.checkbox,
.radio {
   grid-column: 2 / 3;
   position: relative;
}

.question {
   grid-column: 2 / 3;
   justify-self: start;
   margin: 2rem 0 0;
}

.wide-question {
   grid-column: 1 / 3;
   grid-row: span 2;
   align-self: end;
   justify-self: start;
}

.spacer {
   grid-column: 1 / 3;
}

/* remove browser-specific styling */
input {
   appearance: none;
}

/* 
 appearance: none; removes browswer-specfic styles
 font-family: inherit; sets the font to the container's font
 border: none; removes the inset border
 */
input,
textarea {
   appearance: none;
   font-family: inherit;
   padding-left: 0.25em;
   border: none;
   color: var(--input-color);
}

/* Change Autocomplete styles in Chrome*/
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
   -webkit-text-fill-color: var(--input-color);
}

/* hide the default browser checkbox and radio buttons, but use opacity so screen readers can still access them */
.checkbox input[type="checkbox"],
.radio input[type="radio"] {
   opacity: 0;
}

.checkbox label,
.radio label {
   display: inline-block;
   padding: 3px 0 0 0.75rem;
}

/* use ::before and ::after to add boxes and buttons, and their selected state (checks or ciricles) */
.checkbox label::before,
.checkbox label::after,
.radio label::before,
.radio label::after {
   position: absolute;
   content: "";
   display: inline-block;
}

/*Outer box of the fakes */
.checkbox label::before,
.radio label::before {
   height: var(--fake-width);
   width: var(--fake-width);

   border-radius: 2px;
   box-shadow: inset 0px 0px 2px #333;
   background-color: #fff;
   left: 0px;
   top: 3px;
}

.radio label::before {
   border-radius: 100%;
}

/*Checkmark of the fake checkbox*/
.checkbox label::after {
   height: 5px;
   width: 9px;
   border-left: 2px solid var(--form-color);
   border-bottom: 2px solid var(--form-color);

   transform: rotate(-45deg);

   left: 4px;
   top: 7px;
}

/* filled circle of the fake radio*/
.radio label::after {
   height: 14px;
   width: 14px;
   background-color: var(--form-color);
   border-radius: 100%;

   left: 3px;
   top: 6px;
}

/* Hide  by default*/
.checkbox input[type="checkbox"]+label::after,
.radio input[type="radio"]+label::after {
   content: none;
}

/*Unhide on the checked state*/
.checkbox input[type="checkbox"]:checked+label::after,
.radio input[type="radio"]:checked+label::after {
   content: "";
}

/* Add focus styles */
input:focus,
textarea:focus {
   outline: rgb(59, 153, 252) auto 3px;
}

.checkbox input[type="checkbox"]:focus+label::before,
.radio input[type="radio"]:focus+label::before {
   outline: rgb(59, 153, 252) auto 2px;
}

textarea {
   grid-column: 2;
   grid-row: span 5;
}

input[type="submit"] {
   grid-column: 2 / 3;
   grid-row: span 2;
   align-self: end;
   justify-self: start;
   background-color: transparent;
   border: 2px solid #fff;
   border-radius: 5px;
   padding: 0.75em 1.25em;
   color: #fff;
   text-transform: uppercase;
   letter-spacing: 2px;
   font-weight: 500;
   transition: all 200ms ease;
   margin-bottom: 6rem;
}

input[type="submit"]:hover {
   background-color: #fff;
   color: var(--form-color);
}

@media (max-width: 600px) {
   form {
      grid-template-columns: 1fr;
   }

   form>*,
   input,
   .checkbox,
   .radio,
   .question,
   .wide-question,
   input[type="submit"] {
      grid-column: 1 / 2;
   }

   label {
      justify-self: start;
      align-self: end;
   }

   input[type="submit"] {
      justify-self: center;
   }
}



@media (min-width: 500px) {

   .menu-bar {
      font-size: 1rem;
   }

   .hero {
      order: -1;
   }

   .menu-bar {
      background-color: #fff;
      color: var(--menu-bar-color);
   }

   nav {
      position: static;
      transform: none;
      background-color: #fff;
   }

   .menu-bar ul {
      flex-direction: row;
      justify-content: space-around;
   }

   .menu-bar li {
      border: none;
   }

   .menu-bar li:first-child,
   .menu-bar li:last-child {
      padding: 0;
   }

   .hamburger,
   .close {
      display: none;
   }

   .menu-bar a:hover {
      color: inherit;
   }

   .menu-bar a:after {
      content: "";
      display: block;
      width: 100%;
      height: 2px;
      background-color: var(--menu-bar-color);
      transform: scalex(0);
      transition: transform 200ms ease-out;
      transform-origin: right;
   }

   .menu-bar a:hover::after {
      transform: scalex(1);
      transform-origin: left;
   }


   .panel {
      flex-direction: row;
   }

   .panel.clamp {
      height: 60vh;
   }

   .panel .text-wrapper {
      font-size: 1rem;
   }

   .panel .left {
      margin-right: 1rem;
   }

   .cards {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, min-content);
   }
}


@media (min-width: 901px) {
   .hero .text-wrapper h1 {
      font-size: 8rem;
   }

   .panel.clamp {
      height: 75vh;
   }

   .panel .text-wrapper {
      font-size: 1.5rem;
   }

   .cards {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: min-content;
   }
}